Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\components\Combobox.tsx
import React, { useState } from 'react';

interface Option {
  value: string;
  label: string;
}

interface Props {
  options: Option[];
  onChange: (value: string) => void;

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\components\FormularioCliente.tsx
// src/components/FormularioCliente.tsx
import React, { useState, useEffect } from 'react';
import { colorAzul } from '../values/colors';

interface Cliente {
  id?: string;
  nome: string;
  contatos: { tipo: string; valor: string }[];
  endereco?: string;
  cidade?: string;

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\components\Header.tsx
import { useState } from 'react';
import { Link, useLocation } from 'react-router-dom';
import { colorBranco } from '../values/colors';

import imagem from '../../img/logo.jpeg'

const Header = () => {
  const location = useLocation();
  const [isDark ] = useState(false);
  const [menuAberto, setMenuAberto] = useState(false); // Estado para controle do menu

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\components\PublicSidebar.tsx
import React from 'react';
import { Link, useLocation, useNavigate } from 'react-router-dom';
import { useUser } from '../contexts/UserContext';
import Swal from 'sweetalert2';
import { FiLogOut, FiCalendar, FiClock, FiHome } from 'react-icons/fi';

interface PublicSidebarProps {
  isOpen: boolean;
  onClose: () => void;
}

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\components\Sidebar.tsx
import React, { useState, useEffect } from 'react';
import { Link, useLocation, useNavigate } from 'react-router-dom';
import { FaHome, FaUsers, FaMoneyBillWave, FaSignOutAlt, FaPlus } from 'react-icons/fa'; // Importando ícone para "Cadastrar"
import { useUser } from '../contexts/UserContext';
import { getAuth, signOut } from 'firebase/auth';

import imagem from '../../img/logo.jpeg'

interface SidebarProps {
  isOpen: boolean;

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\contexts\UserContext.tsx
// src/contexts/UserContext.tsx
import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';
import { onAuthStateChanged, signOut } from 'firebase/auth';
import { auth } from '../firebaseConfig'; // Importa a configuração do Firebase (auth)

// Definindo o tipo do usuário que será armazenado no estado do contexto
interface User {
  email: string | null;    // E-mail do usuário
  uid: string | null;      // ID único do usuário (identificador único)
  displayName: string | null; // Nome exibido do usuário (caso tenha configurado no Firebase)

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\layouts\DashboardLayout.tsx
import { Outlet, Link } from 'react-router-dom';
import { FaUsers, FaTools, FaHome } from 'react-icons/fa';
import { useUser } from '../contexts/UserContext';

const DashboardLayout = () => {
  const { logout } = useUser();

  return (
    <div style={{ display: 'flex', minHeight: '100vh' }}>
      <nav style={{ width: '250px', background: '#0d6efd', color: 'white', padding: '1rem' }}>

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\layouts\PrivateLayout.tsx
// src/layouts/PrivateLayout.tsx
import React, { useState, useEffect } from 'react';
import { Outlet } from 'react-router-dom';
import Sidebar from '../components/Sidebar';

const PrivateLayout: React.FC = () => {
  const [sidebarOpen, setSidebarOpen] = useState(window.innerWidth >= 768);
  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);

  useEffect(() => {

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\layouts\PublicLayout.tsx
// src/layouts/PublicLayout.tsx
import React, { useEffect, useState } from 'react';
import { Outlet } from 'react-router-dom';
import PublicSidebar from '../components/PublicSidebar';

const PublicLayout: React.FC = () => {
  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);
  const [sidebarOpen, setSidebarOpen] = useState(window.innerWidth >= 768);

  useEffect(() => {

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\admin\CadastrarCliente.tsx
// src/pages/cliente/CadastrarCliente.tsx

import React, { useState, useEffect } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { colorAzul, colorBranco } from '../../values/colors';
import ClienteRepository from '../../repositories/ClienteRepository';
import Swal from 'sweetalert2';
import { NumericFormat } from 'react-number-format';

interface Contato {

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\admin\CadastrarProduto.tsx
import React, { useState, useEffect } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { colorAzul, colorBranco } from '../../values/colors';
import ProdutoRepository from '../../repositories/ProdutoRepository';
import Swal from 'sweetalert2';

// interface Contato {
//   tipo: string;
//   valor: string;
//   erro: string;

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\admin\CadastrarServico.tsx
import React, { useState, useEffect } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { colorAzul } from '../../values/colors';
import servicoeRepository from '../../repositories/ServicoRepository';
import clienteRepository from '../../repositories/ClienteRepository';
import Swal from 'sweetalert2';
import { NumericFormat } from 'react-number-format';
import { Servico } from '../../types/Servico';
import { Cliente } from '../../types/Cliente';
import Select from 'react-select';

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\admin\CadastrarTipoServico.tsx
import React, { useState, useEffect } from 'react';
import Swal from 'sweetalert2';
import tipoServicoRepository from '../../repositories/TipoServicoRepository';
import { colorAzul } from '../../values/colors';

/**
 * Componente para cadastrar, listar, editar e excluir tipos de serviço.
 */
const CadastrarTipoServico = () => {
  const [tipoServico, setTipoServico] = useState<string>(''); // Nome digitado

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\admin\CadastrarVenda.tsx
// src/pages/admin/CadastrarVenda.tsx

import React, { useEffect, useState } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { colorAzul } from '../../values/colors';
import Select from 'react-select';
import { NumericFormat } from 'react-number-format';
import Swal from 'sweetalert2';

import { Cliente } from '../../types/Cliente';

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\admin\Clientes.tsx
// src/pages/admin/Clientes.tsx

import { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { colorAzul } from '../../values/colors';
import ClienteRepository from '../../repositories/ClienteRepository';
import Swal from 'sweetalert2';
import { Edit2, Trash2, Users } from 'lucide-react';

// Tipagens auxiliares

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\admin\EditarCliente.tsx
import React, { useEffect, useState } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import ClienteRepository from '../../repositories/ClienteRepository';
import { Contato } from '../../types/Cliente';

const EditarCliente = () => {
  const { id } = useParams();
  const navigate = useNavigate();

  const [cliente, setCliente] = useState({

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\admin\Produtos.tsx
// src/pages/admin/Produtos.tsx

import { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { colorAzul } from '../../values/colors';
// import ProdutoRepository from '../../repositories/ProdutoRepository';
import ProdutoRepository from '../../repositories/ProdutoRepository';
import Swal from 'sweetalert2';
import { Edit2, Trash2, Users } from 'lucide-react';
import { FaUsers, FaBeer, FaSignOutAlt, FaPlus } from 'react-icons/fa';

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\admin\Servicos.tsx
// src/pages/admin/Servicos.tsx

import { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { colorAzul } from '../../values/colors';
import ServicoRepository from '../../repositories/ServicoRepository';
import Swal from 'sweetalert2';

interface Servico {
  id: string;

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\admin\Vendas.tsx
// src/pages/admin/Vender.tsx

import { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { colorAzul } from '../../values/colors';
import VendaRepository from '../../repositories/VendaRepository';
import Swal from 'sweetalert2';

// Interface para tipar a venda na listagem
interface Vendas {

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\client\Dashboard.tsx
// src/pages/client/Dashboard.tsx

import { useUser } from '../../contexts/UserContext';
import { useNavigate } from 'react-router-dom';
import { motion } from 'framer-motion';
import { FaUsers, FaBeer , FaSignOutAlt, FaPlus, FaMoneyBillWave  } from 'react-icons/fa';
import { colorAzul, colorBranco } from '../../values/colors';

/**
 * Componente de dashboard principal após login.

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\protected\ProtectedRoute.tsx
// src/pages/protected/ProtectedRoute.tsx
import React from 'react';
import { Navigate } from 'react-router-dom';
import { useUser } from '../../contexts/UserContext'; // Importa o hook que gerencia o estado de usuário

// Componente de rota protegida
const ProtectedRoute: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const { user } = useUser(); // Obtém o usuário do contexto

  // Verifica se o usuário está logado

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\public\Agendamento.tsx
import React, { useState, useEffect } from 'react';
import { useForm } from 'react-hook-form';
import Swal from 'sweetalert2';
import { FaCarSide, FaMotorcycle } from 'react-icons/fa';
import { motion } from 'framer-motion';
import { colorAzul, colorBranco } from '../../values/colors';
import { FaSpinner } from 'react-icons/fa'; // Ícone de spinner
// import { db } from '../../firebase'; // Importe a instância do Firestore
import { db } from '../../firebaseConfig';
import { collection, getDocs } from 'firebase/firestore';

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\public\ComoChegar.tsx
import imagem from '../../../img/background4.png';

const ComoChegar = () => {
  return (
    <div style={{ 
      position: "absolute",
      top: 0,
      left: 0,
      width: "100vw",
      height: "100vh",

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\public\DashboardClientePublico.tsx
// src/pages/public/DashboardClientePublico.tsx

/**
 * Painel de controle para clientes públicos autenticados
 * Mostra o nome do cliente e opções para acessar seus agendamentos e histórico de serviços
 * Estilizado com azul claro, diferente do painel administrativo
 */

import { useUser } from '../../contexts/UserContext'; // Contexto do usuário (autenticação)
import { useNavigate } from 'react-router-dom'; // Navegação programática

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\public\Home.tsx
// import { Link } from 'react-router-dom';
// import { colorAzul, colorBranco } from '../../values/colors';

// import imagembackground from '../../../img/background4.png'

const Home = () => {
  return (
    <>

      <div style={{ backgroundColor: '#f7f9fc', minHeight: '100vh', display: 'flex', flexDirection: 'column' }}>

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\public\Login.tsx
import Swal from 'sweetalert2';
import React, { useState } from 'react';
import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';
import { useNavigate } from 'react-router-dom';
import { useUser } from '../../contexts/UserContext';
import { colorAzul, colorBranco } from '../../values/colors';
import { auth, db } from '../../firebaseConfig';
import { doc, setDoc } from 'firebase/firestore';

const Login = () => {

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\public\MeusAgendamento.tsx
// src/pages/protected/MeusAgendamentos.tsx
import React, { useEffect, useState } from 'react';
import { collection, query, where, getDocs } from 'firebase/firestore';
import { db } from '../../firebaseConfig';
import { useUser } from '../../contexts/UserContext';

interface Servico {
  id: string;
  tipo: string;
  data: string;

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\pages\public\MeusServico.tsx
import React, { useEffect, useState } from 'react';
import { useUser } from '../../contexts/UserContext';
// import servicoRepository from '../../repositories/ServicoRepository';

interface Servico {
  id: string;
  tipo: string;
  valor: string;
  criadoEm?: string;
  status?: string;

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\repositories\ClienteRepository.tsx
// src/repositories/ClienteRepository.ts

import { db } from '../firebaseConfig';
import {
  collection,
  getDocs,
  addDoc,
  doc,
  getDoc,
  updateDoc,

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\repositories\ProdutoRepository.tsx
// src/repositories/ProdutoRepository.ts

import { db } from '../firebaseConfig';
import {
  collection,
  getDocs,
  addDoc,
  doc,
  getDoc,
  updateDoc,

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\repositories\ServicoRepository.tsx
import {
  collection,
  getDocs,
  getDoc,
  deleteDoc,
  doc,
  updateDoc,
} from 'firebase/firestore';
import { db } from '../firebaseConfig';
import FirebaseService from '../services/FirebaseService';

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\repositories\TipoServicoRepository.tsx
import {
  collection,
  getDocs,
  getDoc,
  deleteDoc,
  doc,
  updateDoc,
  setDoc
} from 'firebase/firestore';
import { db } from '../firebaseConfig';

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\repositories\VendaRepository.tsx
// src/repositories/VendaRepository.ts

import { db } from '../firebaseConfig';
import {
  collection,
  getDocs,
  addDoc,
  doc,
  getDoc,
  updateDoc,

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\services\FirebaseService.tsx
// firebase-service.ts
import { collection, addDoc } from "firebase/firestore";
import { db } from "../firebaseConfig"; // Importando a instância de db configurada no firebase-config

class FirebaseService {
  // Função genérica para salvar dados em qualquer coleção do Firestore
  async saveData(collectionName: string, data: any) {
    try {
      if (Array.isArray(data)) {
        // Se for uma lista, salva todos os itens da lista

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\values\colors.tsx
export const colorBranco = '#FFF';

export const colorAzul = '#0D47A1E6';

export const colorAzulClaro = '#0D47A1E6';
// export const colorAzulClaro = '#5dade2'; // Exemplo

export const colorVermelho = '#F00';

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\App.tsx
// App.tsx
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import { UserProvider } from './contexts/UserContext';

// Layouts
import PublicLayout from './layouts/PublicLayout';
import PrivateLayout from './layouts/PrivateLayout';

// Componentes
import Header from './components/Header';

---

Arquivo: C:\Users\Developer\Desktop\LINCOM\servicos\src\main.tsx
import 'bootstrap/dist/css/bootstrap.min.css';
import './firebaseConfig';
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.tsx'

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <App />

---

